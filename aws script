## GIT

1. 각 서비스 별로 GIT REPOSITORY > https://github.com/l2skcc

## aws iam
access key create

## aws eks
eksctl create cluster --name skcc-team2 --version 1.15 --nodegroup-name standard-workers --node-type t3.medium --nodes 3 --nodes-min 1 --nodes-max 3
aws eks --region ap-northeast-2 update-kubeconfig --name skcc-team2

## aws ecr
aws ecr create-repository --repository-name ecr-skcc-team2-gateway --image-scanning-configuration scanOnPush=true --region ap-northeast-2
aws ecr create-repository --repository-name ecr-skcc-team2-management --image-scanning-configuration scanOnPush=true --region ap-northeast-2
aws ecr create-repository --repository-name ecr-skcc-team2-rental --image-scanning-configuration scanOnPush=true --region ap-northeast-2
aws ecr create-repository --repository-name ecr-skcc-team2-reservation --image-scanning-configuration scanOnPush=true --region ap-northeast-2
aws ecr create-repository --repository-name ecr-skcc-team2-veiw --image-scanning-configuration scanOnPush=true --region ap-northeast-2
aws ecr create-repository --repository-name ecr-skcc-team2-payment --image-scanning-configuration scanOnPush=true --region ap-northeast-2
aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com


## ~aws code build~

## git clone to ubuntu
git clone https://github.com/l2skcc/***
## mvn package

## docker build
docker build -t 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-skcc-team2-gateway:v1 .
docker push 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-skcc-team2-gateway:v1

docker build -t 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-skcc-team2-management:v1 .
docker push 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-skcc-team2-management:v1

docker build -t 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-skcc-team2-rental:v1 .
docker push 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-skcc-team2-rental:v1

docker build -t 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-skcc-team2-reservation:v1 .
docker push 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-skcc-team2-reservation:v1

docker build -t 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-skcc-team2-veiw:v1 .
docker push 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-skcc-team2-veiw:v1

docker build -t 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-skcc-team2-payment:v1 .
docker push 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-skcc-team2-payment:v1


## deploy
kubectl create deploy gateway --image=496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-skcc-team2-gateway:v1
kubectl expose deployment.apps/gateway  --type=LoadBalancer --port=808


### ~/kubernetest/deploy.yaml 수정! > image: username/management:latest 
kubectl apply -f .

## install kafka
curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash
kubectl --namespace kube-system create sa tiller
kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
helm init --service-account tiller
kubectl patch deploy --namespace kube-system tiller-deploy -p '{"spec":{"template":{"spec":{"serviceAccount":"tiller"}}}}'
helm repo add incubator http://storage.googleapis.com/kubernetes-charts-incubator
helm repo update
helm install --name my-kafka --namespace kafka incubator/kafka

watch kubectl get all -n kafka 

